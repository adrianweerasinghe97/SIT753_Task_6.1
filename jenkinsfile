pipeline {
    agent any

    environment {
        // Definining environment variable
        RECIPIENT_EMAIL = 'adrian97.thilina@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the project using Maven.'
                // build automation tool: Maven, Maven would compile and package the code
                
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests using JUnit and Mockito to verify functionality.'
                // Test automation tools to be used: JUnit for unit testing and Mockito for integration testing
               
            }
            post {
                always {
                    emailext (
                        to: "${RECIPIENT_EMAIL}",
                        subject: "Unit and Integration Tests - Build #${BUILD_NUMBER} - ${BUILD_STATUS}",
                        body: "<p>Unit and Integration Tests completed. Build status: ${BUILD_STATUS}.</p>",
                        attachLog: true
                    )
                    echo 'Sending notification email after Unit and Integration Tests.'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing code with SonarQube.'
                // Tool to be used: SonarQube to perform code analysis to ensure code quality and standards.
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing security scan with OWASP ZAP to identify vulnerabilities.'
                // Tool to be used: OWASP ZAP
            }
            post {
                always {
                    emailext (
                        to: "${RECIPIENT_EMAIL}",
                        subject: "Security Scan - Build #${BUILD_NUMBER} - ${BUILD_STATUS}",
                        body: "<p>Security Scan completed. Build status: ${BUILD_STATUS}.</p>",
                        attachLog: true
                    )
                    echo 'Sending notification email after Security Scan.'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server.'
                // Tool to be used: Docker + Kubernetes can be used to package the application and its dependencies together. Kubernetes can then be used to manage these containers to deploy applications reliably to different environments..
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging environment.'
                // Tool to be used: Postman can be configured to run integration tests to check the interactions between various parts of the application.
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server.'
                // Tool to be used: Google Cloud Platform (GCP)
            }
        }
    }

    post {
        always {
            echo 'Build completed.'
        }
    }
}


//Test 1
